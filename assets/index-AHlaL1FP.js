(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))a(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&a(c)}).observe(document,{childList:!0,subtree:!0});function f(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(o){if(o.ep)return;o.ep=!0;const r=f(o);fetch(o.href,r)}})();const M=["#0f380f","#306230","#8bac0f","#9bbc0f"],B=["#191E21","#C6C3C2","#30304C","#3C5330","#6A181A","#976D2E"],S=["#191E21","#C6C3C2","#30304C","#3C5330","#6A181A","#7D3024","#976D2E"],w={default:["#000","#fff"],gameboy:M,spectra6:B,acEP:S},v=["#0F0","#3F0","#7F0","#FF0"],k=["#000000","#FFFFFF","#0000FF","#00FF00","#FF0000","#FFFF00"],$=["#000","#fff","#0000FF","#00FF00","#FF0000","#FF8000","#FFFF00"],E={default:["#000000","#FF0000"],gameboy:v,spectra6:k,acEP:$},x=t=>t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(e,f,a,o)=>"#"+f+f+a+a+o+o).substring(1).match(/.{2}/g).map(e=>parseInt(e,16)),q=(t,e,{originalColors:f,replaceColors:a})=>{const o=t.getContext("2d"),r=t.width,c=t.height,l=e.getContext("2d"),n=o.getImageData(0,0,r,c);var g=0;const p=f.map(d=>x(d)),i=a.map(d=>x(d));for(let d=0;d<n.data.length;d+=4){const u=p.find(s=>n.data[d]==s[0]&&n.data[d+1]==s[1]&&n.data[d+2]==s[2]);if(u){const s=p.indexOf(u),h=i[s];n.data[d]=h[0],n.data[d+1]=h[1],n.data[d+2]=h[2]}else g++}g>0&&console.warn(`replaceColors: ${g} pixels were not replaced. Check if the colors match exactly.`),e.width=r,e.height=c,l.putImageData(n,0,0)},I={floydSteinberg:()=>[{offset:[1,0],factor:7/16},{offset:[-1,1],factor:3/16},{offset:[0,1],factor:5/16},{offset:[1,1],factor:1/16}],falseFloydSteinberg:()=>[{offset:[1,0],factor:3/8},{offset:[0,1],factor:3/8},{offset:[1,1],factor:2/8}],jarvis:()=>[{offset:[1,0],factor:7/48},{offset:[2,0],factor:5/48},{offset:[-2,1],factor:3/48},{offset:[-1,1],factor:5/48},{offset:[0,1],factor:7/48},{offset:[1,1],factor:5/48},{offset:[2,1],factor:3/48},{offset:[-2,2],factor:1/48},{offset:[-1,2],factor:3/48},{offset:[0,2],factor:4/48},{offset:[1,2],factor:3/48},{offset:[2,2],factor:1/48}],stucki:()=>[{offset:[1,0],factor:8/42},{offset:[2,0],factor:4/42},{offset:[-2,1],factor:2/42},{offset:[-1,1],factor:4/42},{offset:[0,1],factor:8/42},{offset:[1,1],factor:4/42},{offset:[2,1],factor:2/42},{offset:[-2,2],factor:1/42},{offset:[-1,2],factor:2/42},{offset:[0,2],factor:4/42},{offset:[1,2],factor:2/42},{offset:[2,2],factor:1/42}],burkes:()=>[{offset:[1,0],factor:8/32},{offset:[2,0],factor:4/32},{offset:[-2,1],factor:2/32},{offset:[-1,1],factor:4/32},{offset:[0,1],factor:8/32},{offset:[1,1],factor:4/32},{offset:[2,1],factor:2/32}],sierra3:()=>[{offset:[1,0],factor:5/32},{offset:[2,0],factor:3/32},{offset:[-2,1],factor:2/32},{offset:[-1,1],factor:4/32},{offset:[0,1],factor:5/32},{offset:[1,1],factor:4/32},{offset:[2,1],factor:2/32},{offset:[-1,2],factor:2/32},{offset:[0,2],factor:3/32},{offset:[1,2],factor:2/32}],sierra2:()=>[{offset:[1,0],factor:4/16},{offset:[2,0],factor:3/16},{offset:[-2,1],factor:1/16},{offset:[-1,1],factor:2/16},{offset:[0,1],factor:3/16},{offset:[1,1],factor:2/16},{offset:[2,1],factor:1/16}],"Sierra2-4A":()=>[{offset:[1,0],factor:2/4},{offset:[-2,1],factor:1/4},{offset:[-1,1],factor:1/4}]},U=t=>{const e=t[0]<8?t[0]:8,f=t[1]<8?t[1]:8,a=[[0,48,12,60,3,51,15,63],[32,16,44,28,35,19,47,31],[8,56,4,52,11,59,7,55],[40,24,36,20,43,27,39,32],[2,50,14,62,1,49,13,61],[34,18,46,30,33,17,45,29],[10,58,6,54,9,57,5,53],[42,26,38,22,41,25,37,21]];if(e===8&&f===8)return a;const o=[];let r=0;for(r;r<f;r++)o.push([]);o.forEach((l,n)=>{let g=0;for(g;g<e;g++)l.push(a[g][n])});const c={};return o.flat().sort((l,n)=>l-n).forEach((l,n)=>c[l]=n),o.forEach((l,n)=>{l.forEach((g,p)=>{o[n][p]=c[g]})}),o};function V(t){const e=/^#?([a-f\d])([a-f\d])([a-f\d])$/i;t=t.replace(e,(a,o,r,c)=>o+o+r+r+c+c);const f=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return f?[parseInt(f[1],16),parseInt(f[2],16),parseInt(f[3],16)]:null}const N={hexToRgb:V};function W(t,e){return Math.floor(Math.random()*(e-t+1))+t}const R={randomInteger:W},F=(t,e)=>{const f=e.map(o=>({distance:j(o,t),color:o}));let a;return f.forEach(o=>{a?o.distance<a.distance&&(a=o):a=o}),a.color[3]||a.color.push(255),a.color},j=(t,e)=>{const f=t[0]-e[0],a=t[1]-e[1],o=t[2]-e[2];return Math.sqrt(f*f+a*a+o*o)},G={ditheringType:"errorDiffusion",errorDiffusionMatrix:"floydSteinberg",serpentine:!1,orderedDitheringType:"bayer",orderedDitheringMatrix:[4,4],randomDitheringType:"blackAndWhite",palette:"default",sampleColorsFromImage:!1,numberOfSampleColors:10},Q=async(t,e,f)=>{if(!t||!e)return;const o=t.getContext("2d").getImageData(0,0,t.width,t.height),r={...G,...f},c=o.width;let l=[];!r.palette||r.sampleColorsFromImage===!0||(l=Z(r.palette));function n(s,h){o.data[s]=h[0],o.data[s+1]=h[1],o.data[s+2]=h[2],o.data[s+3]=h[3]}const g=U([r.orderedDitheringMatrix[0],r.orderedDitheringMatrix[1]]);let p,i,d,u;for(p=0;p<=o.data.length;p+=4){const s=p;u=P(s,o.data),(!r.ditheringType||r.ditheringType==="quantizationOnly")&&(i=F(u,l),n(s,i)),r.ditheringType==="random"&&r.randomDitheringType==="rgb"&&(i=K(u),n(s,i)),r.ditheringType==="random"&&r.randomDitheringType==="blackAndWhite"&&(i=X(u),n(s,i)),r.ditheringType==="ordered"&&(i=_(u,J(s/4,c),g,64),i=F(i,l),n(s,i));const h=I[r.errorDiffusionMatrix]()||I.floydSteinberg();r.ditheringType==="errorDiffusion"&&(i=F(u,l),n(s,i),d=Y(u,i),h.forEach(m=>{const O=m.offset[0]*4+m.offset[1]*4*c,C=s+O;if(!o.data[C])return;const A=H(P(C,o.data),d,m.factor);n(C,A)}))}return z(o,e)},P=(t,e)=>[e[t],e[t+1],e[t+2],e[t+3]],Y=(t,e)=>t.map((a,o)=>a-e[o]),H=(t,e,f)=>t.map((a,o)=>a+e[o]*f),K=t=>t.map(e=>e<R.randomInteger(0,255)?0:255),X=t=>(t[0]+t[1]+t[2])/3<R.randomInteger(0,255)?[0,0,0,255]:[255,255,255,255],_=(t,e,f,a)=>{const o=f[e[1]%f.length][e[0]%f[0].length]/(f.length*f[0].length);return t.map(r=>r+o*a)},J=(t,e)=>[t%e,Math.floor(t/e)],Z=t=>(typeof t=="string"?w[t]:t).map(f=>N.hexToRgb(f)),z=(t,e)=>(e.width=t.width,e.height=t.height,e.getContext("2d").putImageData(t,0,0),e);function tt(t){const e=t.toLowerCase();return w[e]||w.default}function L(t){const e=t.toLowerCase();return E[e]||E.default}const D=document.getElementById("fileInput"),y=document.getElementById("inputCanvas"),b=document.getElementById("outputCanvas"),T=document.getElementById("deviceColorsCanvas"),et=document.getElementById("downloadLink"),ot=document.getElementById("downloadLink");D.addEventListener("change",async()=>{var c;if(!((c=D.files)!=null&&c.length))return;const t=D.files[0],e=new Image;e.src=URL.createObjectURL(t),await e.decode(),y.width=e.width,y.height=e.height;const f=y.getContext("2d");f.drawImage(e,0,0),f.getImageData(0,0,e.width,e.height);const a=tt("spectra6");console.log("Using palette:",a,L("spectra6"));const r=await Q(y,b,{algorithm:"floydSteinberg",palette:a,calibrate:!0});console.log("Dithered image data:",r),et.href=b.toDataURL("image/png"),q(b,T,{originalColors:a,replaceColors:L("spectra6")}),ot.href=T.toDataURL("image/png")});
